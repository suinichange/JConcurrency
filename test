Exexuter 框架使用Runnnable作为任务的基本形式。但Runnable 的抽象具有较大的局限性，它不能返回一个值或者抛出一个受检查的异常。<br/>

但是许多任务实际上都是存在延迟计算的，比如数据库的查询，从网络获取资源，或者计算某个复杂功能。此时我们可以使用Callable。它认为主入口点（即 call）将返回一个值，并可能抛出异常。<br/>

```java
public interface Callable<V> {
    /**
     * Computes a result, or throws an exception if unable to do so.
     *
     * @return computed result
     * @throws Exception if unable to compute a result
     */
    V call() throws Exception;
}
```

